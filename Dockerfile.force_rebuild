# Dockerfile.force_rebuild - Use this when you need to force a complete rebuild
# Usage: docker build -f Dockerfile.force_rebuild -t jobspy-frontend .

FROM python:3.11-slim

# Generate unique build identifier that changes with every build
ARG BUILD_TIMESTAMP=$(date -u +'%Y%m%d-%H%M%S')
ARG BUILD_UUID=$(uuidgen | tr -d '-')
ARG RANDOM_HASH=$(head /dev/urandom | tr -dc 'a-f0-9' | fold -w 32 | head -n 1)
ARG FORCE_REBUILD_TRIGGER=$(date +%s%N)

# Set environment variables that will force cache invalidation
ENV FORCE_REBUILD_TIMESTAMP=${BUILD_TIMESTAMP}
ENV FORCE_REBUILD_UUID=${BUILD_UUID}
ENV FORCE_REBUILD_HASH=${RANDOM_HASH}

# This RUN command will ALWAYS change, breaking the cache chain
RUN echo "=== FORCED COMPLETE REBUILD ===" && \
    echo "Build Timestamp: ${BUILD_TIMESTAMP}" && \
    echo "Build UUID: ${BUILD_UUID}" && \
    echo "Random Hash: ${RANDOM_HASH}" && \
    echo "This RUN command changes every build, breaking all Docker caching" && \
    mkdir -p /tmp/rebuild_info && \
    echo "BUILD_TIMESTAMP=${BUILD_TIMESTAMP}" > /tmp/rebuild_info/build_vars.txt && \
    echo "BUILD_UUID=${BUILD_UUID}" >> /tmp/rebuild_info/build_vars.txt && \
    echo "RANDOM_HASH=${RANDOM_HASH}" >> /tmp/rebuild_info/build_vars.txt && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /app/*

# Set working directory
WORKDIR /app

# Install system dependencies (this will now always run due to cache break above)
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    git \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements (this will now always be fresh)
COPY requirements.admin.txt /app/requirements.admin.txt
COPY requirements.txt /app/requirements.txt

# Install dependencies (will always run due to cache break)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.admin.txt && \
    pip install --no-cache-dir psycopg2-binary requests flask-wtf

# Copy application code (will always create fresh layers)
COPY jobspy/ /app/jobspy/
COPY worker_admin.py /app/
COPY worker_manager.py /app/
COPY modular_schema.sql /app/modular_schema.sql

# Force schema rebuild
RUN echo "Schema rebuild: $(date)" > /app/schema_rebuild_info.txt

# Create directories fresh every time
RUN rm -rf /app/templates /app/static /app/logs 2>/dev/null || true && \
    mkdir -p /app/templates /app/static/css /app/static/js /app/static/images /app/logs

# Create base template
RUN cat > /app/templates/base.html << 'TEMPLATE'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Job Scraper Admin{% endblock %}</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
    
    {% block head %}{% endblock %}
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="{{ url_for('dashboard') }}">
                <i class="bi bi-briefcase-fill me-2"></i>
                Job Scraper Admin
            </a>
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('dashboard') }}">
                            <i class="bi bi-speedometer2 me-1"></i>Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('list_workers') }}">
                            <i class="bi bi-people me-1"></i>Workers
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('list_databases') }}">
                            <i class="bi bi-database me-1"></i>Databases
                        </a>
                    </li>
                </ul>
                
                <ul class="navbar-nav">
                    {% if session.get('logged_in') %}
                    <li class="nav-item">
                        <span class="navbar-text me-3">
                            <i class="bi bi-person-circle me-1"></i>
                            {{ session.get('username', 'Admin') }}
                        </span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('logout') }}">
                            <i class="bi bi-box-arrow-right me-1"></i>Logout
                        </a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('login') }}">
                            <i class="bi bi-box-arrow-in-right me-1"></i>Login
                        </a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container-fluid py-4">
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ 'danger' if category == 'error' else category }} alert-dismissible fade show" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                {% endfor %}
            {% endif %}
        {% endwith %}
        
        {% block content %}{% endblock %}
    </main>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    {% block scripts %}{% endblock %}
</body>
</html>
TEMPLATE

# Create login template
RUN cat > /app/templates/login.html << 'TEMPLATE'
{% extends "base.html" %}

{% block title %}Login - Job Scraper Admin{% endblock %}

{% block content %}
<div class="row justify-content-center">
    <div class="col-md-6 col-lg-5">
        <div class="glass-card rounded-4 p-5">
            <div class="text-center mb-4">
                <div class="mb-3">
                    <i class="bi bi-shield-lock-fill text-primary" style="font-size: 4rem;"></i>
                </div>
                <h2 class="mb-3 fw-bold">Login</h2>
                <p class="text-muted">Enter your password to access the admin dashboard</p>
            </div>
            
            <form method="POST">
                {{ form.hidden_tag() }}
                
                <div class="mb-4">
                    <label class="form-label fw-semibold" for="{{ form.password.id }}">
                        {{ form.password.label }}
                    </label>
                    {{ form.password(class="form-control form-control-lg", placeholder="Enter admin password", autocomplete="current-password") }}
                    {% if form.password.errors %}
                        <div class="text-danger small mt-1">
                            {% for error in form.password.errors %}
                                <div>{{ error }}</div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>
                
                <div class="d-grid">
                    {{ form.submit(class="btn btn-primary btn-lg") }}
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}
TEMPLATE

# Create dashboard template
RUN cat > /app/templates/dashboard.html << 'TEMPLATE'
{% extends "base.html" %}

{% block title %}Dashboard - Job Scraper Admin{% endblock %}

{% block content %}
<div class="row mb-4">
    <div class="col-12">
        <div class="glass-card rounded-4 p-4">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="mb-0 fw-bold">Dashboard</h1>
                    <p class="text-muted mb-0">Job Scraping Worker Management System</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex gap-2 justify-content-end">
                        <a href="{{ url_for('list_workers') }}" class="btn btn-primary">
                            <i class="bi bi-people me-1"></i>Manage Workers
                        </a>
                        <a href="{{ url_for('list_databases') }}" class="btn btn-outline-primary">
                            <i class="bi bi-database me-1"></i>Databases
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Overview Metrics -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-4">
        <div class="metric-card h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-uppercase small mb-2 opacity-75">Total Workers</h6>
                        <div class="display-4 fw-bold" id="total-workers">-</div>
                    </div>
                    <div class="bg-white bg-opacity-20 rounded-circle p-3">
                        <i class="bi bi-people fs-4"></i>
                    </div>
                </div>
                <div class="mt-3">
                    <span class="badge bg-success" id="active-workers-count">0 Active</span>
                    <span class="badge bg-warning ms-1" id="inactive-workers-count">0 Inactive</span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-4">
        <div class="metric-card h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-uppercase small mb-2 opacity-75">Databases</h6>
                        <div class="display-4 fw-bold" id="total-databases">-</div>
                    </div>
                    <div class="bg-white bg-opacity-20 rounded-circle p-3">
                        <i class="bi bi-database fs-4"></i>
                    </div>
                </div>
                <div class="mt-3">
                    <span class="badge bg-success" id="active-databases-count">0 Connected</span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-4">
        <div class="metric-card h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-uppercase small mb-2 opacity-75">Jobs Scraped</h6>
                        <div class="display-4 fw-bold" id="total-jobs">-</div>
                    </div>
                    <div class="bg-white bg-opacity-20 rounded-circle p-3">
                        <i class="bi bi-briefcase fs-4"></i>
                    </div>
                </div>
                <div class="mt-3">
                    <span class="badge bg-info" id="recent-jobs-count">0 Today</span>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-4">
        <div class="metric-card h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-start">
                    <div>
                        <h6 class="text-uppercase small mb-2 opacity-75">System Status</h6>
                        <div class="display-4 fw-bold">
                            <span class="status-online">●</span>
                        </div>
                    </div>
                    <div class="bg-white bg-opacity-20 rounded-circle p-3">
                        <i class="bi bi-check-circle fs-4"></i>
                    </div>
                </div>
                <div class="mt-3">
                    <span class="badge bg-success">Online</span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Activity -->
<div class="row">
    <div class="col-lg-8 mb-4">
        <div class="glass-card h-100">
            <div class="card-header bg-transparent border-0 px-4 pt-4">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="mb-0 fw-bold">Recent Worker Activity</h4>
                    <a href="{{ url_for('list_workers') }}" class="btn btn-sm btn-outline-primary">
                        View All <i class="bi bi-arrow-right"></i>
                    </a>
                </div>
            </div>
            <div class="card-body p-4">
                <div id="recent-activity">
                    <div class="text-center py-5">
                        <i class="bi bi-activity text-muted" style="font-size: 3rem;"></i>
                        <p class="text-muted mt-3">Loading recent activity...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4 mb-4">
        <div class="glass-card h-100">
            <div class="card-header bg-transparent border-0 px-4 pt-4">
                <h4 class="mb-0 fw-bold">Quick Actions</h4>
            </div>
            <div class="card-body p-4">
                <div class="d-grid gap-2">
                    <a href="{{ url_for('new_worker') }}" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Create New Worker
                    </a>
                    <a href="{{ url_for('new_database') }}" class="btn btn-outline-primary">
                        <i class="bi bi-database-add me-2"></i>Add Database
                    </a>
                    <button class="btn btn-outline-success w-100" onclick="runAllWorkers()">
                        <i class="bi bi-play-circle me-2"></i>Run All Workers
                    </button>
                    <button class="btn btn-outline-info w-100" onclick="refreshDashboard()">
                        <i class="bi bi-arrow-clockwise me-2"></i>Refresh Dashboard
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block scripts %}
<script>
// Dashboard JavaScript functionality
function refreshDashboard() {
    location.reload();
}

function runAllWorkers() {
    if (confirm('Are you sure you want to run all workers?')) {
        fetch('/api/workers/run-all', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            alert(data.message || 'Workers execution started');
        })
        .catch(error => {
            console.error('Error running workers:', error);
            alert('Error running workers');
        });
    }
}

// Load dashboard metrics on page load
document.addEventListener('DOMContentLoaded', function() {
    loadDashboardMetrics();
    loadRecentActivity();
});

function loadDashboardMetrics() {
    // Simulated data - replace with actual API calls
    document.getElementById('total-workers').textContent = '0';
    document.getElementById('active-workers-count').textContent = '0 Active';
    document.getElementById('inactive-workers-count').textContent = '0 Inactive';
    document.getElementById('total-databases').textContent = '0';
    document.getElementById('active-databases-count').textContent = '0 Connected';
    document.getElementById('total-jobs').textContent = '0';
    document.getElementById('recent-jobs-count').textContent = '0 Today';
}

function loadRecentActivity() {
    const recentActivityDiv = document.getElementById('recent-activity');
    // Simulated recent activity - replace with actual data
    recentActivityDiv.innerHTML = `
        <div class="text-center py-5">
            <i class="bi bi-inbox text-muted" style="font-size: 3rem;"></i>
            <p class="text-muted mt-3">No recent activity found</p>
            <p class="text-muted small">Create workers to start scraping jobs</p>
            <a href="{{ url_for('new_worker') }}" class="btn btn-primary btn-sm mt-2">
                <i class="bi bi-plus-circle me-1"></i>Create First Worker
            </a>
        </div>
    `;
}
</script>
{% endblock %}
TEMPLATE

# Create CSS file
RUN cat > /app/static/css/style.css << 'CSS'
body {
    background-color: #121212;
    color: #e0e0e0;
    min-height: 100vh;
}

/* Dark theme navbar */
.navbar {
    background-color: #1f1f1f !important;
}

.navbar-brand {
    color: #ffffff !important;
}

.navbar-nav .nav-link {
    color: #e0e0e0 !important;
}

.navbar-nav .nav-link:hover {
    color: #1db954 !important;
}

/* Dark theme cards */
.glass-card {
    background-color: #1e1e1e;
    border: 1px solid #333333;
    color: #e0e0e0;
}

.metric-card {
    background-color: #252525;
    border: 1px solid #333333;
}

.metric-card h6 {
    color: #b0b0b0;
}

/* Dark theme forms */
.form-control {
    background-color: #2d2d2d;
    border: 1px solid #444444;
    color: #e0e0e0;
}

.form-control:focus {
    background-color: #2d2d2d;
    border-color: #1db954;
    color: #e0e0e0;
    box-shadow: 0 0 0 0.2rem rgba(29, 185, 84, 0.25);
}

.form-select {
    background-color: #2d2d2d;
    border: 1px solid #444444;
    color: #e0e0e0;
}

.form-select:focus {
    background-color: #2d2d2d;
    border-color: #1db954;
    color: #e0e0e0;
    box-shadow: 0 0 0 0.2rem rgba(29, 185, 84, 0.25);
}

.form-label {
    color: #e0e0e0;
}

/* Dark theme buttons */
.btn-primary {
    background-color: #1db954;
    border-color: #1db954;
    color: #ffffff;
}

.btn-primary:hover {
    background-color: #199d48;
    border-color: #199d48;
    color: #ffffff;
}

.btn-outline-primary {
    border-color: #1db954;
    color: #1db954;
}

.btn-outline-primary:hover {
    background-color: #1db954;
    border-color: #1db954;
    color: #ffffff;
}

.btn-success {
    background-color: #28a745;
    border-color: #28a745;
}

.btn-success:hover {
    background-color: #218838;
    border-color: #1e7e34;
}

.btn-warning {
    background-color: #ffc107;
    border-color: #ffc107;
    color: #212529;
}

.btn-warning:hover {
    background-color: #e0a800;
    border-color: #d39e00;
    color: #212529;
}

.btn-danger {
    background-color: #dc3545;
    border-color: #dc3545;
}

.btn-danger:hover {
    background-color: #c82333;
    border-color: #bd2130;
}

/* Dark theme tables */
.table {
    color: #e0e0e0;
}

.table thead th {
    border-bottom: 2px solid #333333;
}

.table td, .table th {
    border-top: 1px solid #333333;
}

.table-hover tbody tr:hover {
    background-color: #2d2d2d;
}

/* Dark theme alerts */
.alert-success {
    background-color: #155724;
    border-color: #123d1c;
    color: #d4edda;
}

.alert-danger {
    background-color: #721c24;
    border-color: #5b151d;
    color: #f8d7da;
}

.alert-warning {
    background-color: #856404;
    border-color: #6d5203;
    color: #fff3cd;
}

.alert-info {
    background-color: #0c5460;
    border-color: #09424a;
    color: #d1ecf1;
}

/* Dark theme badges */
.badge-success {
    background-color: #28a745;
}

.badge-warning {
    background-color: #ffc107;
    color: #212529;
}

.badge-danger {
    background-color: #dc3545;
}

.badge-info {
    background-color: #17a2b8;
}

/* Dark theme pagination */
.page-item.disabled .page-link {
    background-color: #2d2d2d;
    border-color: #444444;
    color: #6c757d;
}

.page-item.active .page-link {
    background-color: #1db954;
    border-color: #1db954;
}

.page-link {
    background-color: #2d2d2d;
    border: 1px solid #444444;
    color: #e0e0e0;
}

.page-link:hover {
    background-color: #3d3d3d;
    border-color: #555555;
    color: #ffffff;
}

.navbar-nav .nav-link {
    white-space: nowrap;
}

/* Prevent layout breaking on small screens */
@media (max-width: 768px) {
    .navbar-collapse {
        background: #2d2d2d;
        border: 1px solid #444444;
        border-radius: 12px;
        padding: 1rem;
        margin-top: 1rem;
    }
}
CSS

# Set Flask environment
ENV FLASK_APP=worker_admin.py
ENV FLASK_ENV=production
ENV PYTHONPATH=/app:/app/jobspy

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Start the application
CMD ["python", "worker_admin.py"]