version: '3.8'

services:
  # Main service (Frontend/Admin Interface + Worker Engine)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.force_rebuild_ultimate
    container_name: my-job-scraper-fe
    restart: unless-stopped
    environment:
      POSTGRES_URL: ${POSTGRES_URL}
      REDIS_URL: ${REDIS_URL}
      SECRET_KEY: ${SECRET_KEY}
      FLASK_APP: worker_admin.py
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./templates:/app/templates
      - ./static:/app/static
    networks:
      - scraping_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: scraping_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
    networks:
      - scraping_network

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: scraping_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - frontend
    networks:
      - scraping_network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: scraping_prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - scraping_network

volumes:
  redis_data:
  grafana_data:
  prometheus_data:

networks:
  scraping_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16