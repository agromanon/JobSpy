# Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit the actual .env file to version control!

# =============================================================================
# Database Configuration
# =============================================================================
# PostgreSQL connection for job scraping database
POSTGRES_URL=postgres://username:password@hostname:port/database?sslmode=disable

# Redis connection for caching and session management
REDIS_URL=redis://username:password@hostname:port/0

# =============================================================================
# Security
# =============================================================================
# Secret key for Flask sessions and CSRF protection
# Generate with: openssl rand -hex 32
SECRET_KEY=change-this-secret-key-in-production

# Grafana password for monitoring (if using)
GRAFANA_PASSWORD=change-this-grafana-password

# =============================================================================
# Application Settings
# =============================================================================
# Flask environment (development, testing, production)
FLASK_ENV=production

# Debug mode (always False in production!)
DEBUG=False

# Application name for logging and tracking
COMPOSE_PROJECT_NAME=job-scraper-orchestrator

# =============================================================================
# Worker Configuration
# =============================================================================
# Maximum number of concurrent workers
MAX_WORKERS=10

# Worker timeout in seconds
WORKER_TIMEOUT=300

# Worker memory limit in MB
WORKER_MEMORY_LIMIT=512

# =============================================================================
# Monitoring and Logging
# =============================================================================
# Prometheus port for metrics
PROMETHEUS_PORT=9090

# Grafana port for dashboards
GRAFANA_PORT=3000

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# =============================================================================
# Security Headers
# =============================================================================
# Enable CSRF protection
CSRF_ENABLED=True

# Session timeout in seconds
PERMANENT_SESSION_LIFETIME=3600

# ::
# =============================================================================
# Production Checklist - Verify these are set correctly:
# =============================================================================

# [x] SECRET_KEY is long and random (at least 32 characters)
# [x] DEBUG=False in production
# [ ] POSTGRES_URL uses production database credentials
# [ ] REDIS_URL uses production Redis credentials
# [ ] LOG_LEVEL=INFO or WARNING in production
# [ ] SSL certificates are configured
# [ ] Firewall rules are properly set
# [ ] Database backups are configured
# [ ] Monitoring alerts are configured

# =============================================================================
# Development Notes
# =============================================================================
# For local development:
# 1. Copy this file to .env: cp .env.example .env
# 2. Fill in your local development values
# 3. Never commit .env to git
#
# For production deployment:
# 1. Set environment variables in EasyPanel dashboard
# 2. Use secure, randomly generated secrets
# 3. Regularly rotate credentials and secrets
# =============================================================================